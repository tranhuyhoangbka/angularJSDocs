1, C1: use module().factory

'use strict';
angular.module('cart', [])
  .factory('cart', function() {
    var cartData = [];
    return {
      addProduct: function(id, name, price) {
        var addedToExistingItem = false;
        _.forEach(cartData, function(p, index) {
          if(p.id === id) {
            cartData[index].count++;
            addedToExistingItem = true;
            break;
          }
        });
        if(!addedToExistingItem) {
          cartData.push({count: 1, id: id, name: name, price: price});
        }
      },

      removeProduct: function(id) {
        _.forEach(cartData, function(p, index) {
          if(p.id === id) {
            cartData[index].splice(index, 1);
            break;
          }
        });
      },

      getProducts: function() {
        return cartData;
      }
    };
  });
2, use service method
days.js
'use strict';
angular.module('exampleApp').service('days', function() {
  this.tomorrow = new Date().getDay() + 1;
});

controller:
angular.module('exampleApp').controller('dayController', function($scope, days) {
  $scope.day = days.tomorrow;
  console.log($scope.day);
})

-------------
Using module.service
angular.module('commonApp')
  .service('ZipCodes', function($rootScope) {
    return {
      setZipCode: function(type, zip) {
        this[type] =  zip;
        $rootScope.$broadcast('zipCodeUpdated', {
          type: type, zipCode: zip
        });
      }
    }
  });

----------------------------------------------------
Cách tạo Service mà các xử lý logic được run ngay khi service được gọi

angular.module('exampleApp', []).factory('$exceptionHandler', function($log) {
    return function(exception, cause) {
      $log.error("Message: " + exception.message + ' ' + 'Cause: ' + cause);
    }

 $scope.throwEx = function() {
    try{
      throw new Error('Triggered Exception');
    } catch(ex) {
      $exceptionHandler(ex, 'button click');
    }
  };

